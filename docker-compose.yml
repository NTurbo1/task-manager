services:
  mongodb:
    image: mongo
    container_name: mongo_db
    ports:
      - ${MONGODB_HOST_PORT}:${MONGODB_CONTAINER_PORT}
    volumes:
      - mongo:/data
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - app-network

#  redis:
#    image: "redis:alpine"
#    container_name: redis_server
#    ports:
#      - ${REDIS_HOST_PORT}:${REDIS_CONTAINER_PORT}
#    volumes:
#      - redis:/data
#    networks:
#      - app-network

  rabbitmq:
    container_name: "rabbit-mq"
    image: "rabbitmq:management"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    ports:
      - ${RABBITMQ_HOST_PORT}:${RABBITMQ_CONTAINER_PORT}  # Messaging port
      - ${RABBITMQ_MANAGEMENT_HOST_PORT}:${RABBITMQ_MANAGEMENT_CONTAINER_PORT}  # Management UI port
    volumes:
      - rabbitmq:/data
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  keycloak:
    container_name: "keycloak"
    image: quay.io/keycloak/keycloak:25.0.6
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - ${KEYCLOAK_HOST_PORT}:${KEYCLOAK_CONTAINER_PORT}
    volumes:
      - keycloak:/data
    networks:
      - app-network
    command:
      - "start-dev"


volumes:
  mongo:
#  redis:
  rabbitmq:
  keycloak:

networks:
  app-network:
    driver: bridge
